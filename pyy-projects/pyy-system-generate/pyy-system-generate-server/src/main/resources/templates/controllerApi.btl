package ${table.controllerPackageName};

import ${table.voPackageName}.*;
import com.thtf.common.core.response.Pager;
import com.thtf.common.core.response.ResponseResult;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;
import java.util.List;

/**
 * ---------------------------
 * ${table.description} (${table.className}ControllerApi)接口
 * ---------------------------
 * 作者：  ${table.author}
 * 时间：  ${strutil.formatDate(date(),'yyyy-MM-dd HH:mm:ss')}
 * 版本：  v1.0
 * ---------------------------
 */
@Api(tags = "${table.description}管理模块")
@RequestMapping(value = "/${table.objectName}", produces = MediaType.APPLICATION_JSON_UTF8_VALUE )
public interface ${table.className}ControllerApi {

    /**
     * 保存${table.description}
     * @param record
     * @return
     */
    @ApiOperation(value = "保存${table.description}", notes = "创建新${table.description}")
    @ApiImplicitParam(name = "record", value = "${table.description}对象", required = true, dataType = "${table.className}SaveOrUpdateVO", paramType = "body")
    @PostMapping
    ResponseResult<${table.className}VO> save(@Valid @RequestBody ${table.className}SaveOrUpdateVO record);

    /**
     * 修改${table.description}
     * @param id
     * @param record
     * @return
     */
    @ApiOperation(value = "修改${table.description}", notes = "根据ID修改${table.description}")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "id", value = "${table.description}ID", required = true, dataType = "String", paramType = "path"),
            @ApiImplicitParam(name = "record", value = "${table.description}对象", required = true, dataType = "${table.className}SaveOrUpdateVO", paramType = "body")
    })
    @PutMapping("/{id}")
    ResponseResult<${table.className}VO> update(@Valid @PathVariable(value = "id") String id, @RequestBody ${table.className}SaveOrUpdateVO record);

    /**
     * 删除${table.description}
     * @param id
     * @return
     */
	@ApiOperation(value = "删除${table.description}", notes = "根据ID${table.description}")
    @ApiImplicitParam(name = "id", value = "${table.description}ID", required = true, dataType = "String", paramType = "path")
    @DeleteMapping("/{id}")
    ResponseResult delete(@Valid @PathVariable(value = "id") String id);

    /**
     * 单个${table.description}查询
     * @param id
     * @return
     */
    @ApiOperation(value = "${table.description}查询", notes = "根据ID${table.description}查询")
    @ApiImplicitParam(name = "id", value = "${table.description}ID", required = true, dataType = "String", paramType = "path")
    @GetMapping("/{id}")
    ResponseResult<${table.className}VO> findById(@Valid @PathVariable("id") String id);

    /**
     * ${table.description}模糊查询
     * @param queryConditionVO
     * @return
     */
    @ApiOperation(value = "${table.description}模糊查询", notes = "${table.description}不带分页模糊查询")
    @GetMapping("/list")
    ResponseResult<List<${table.className}VO>> getList(${table.className}QueryConditionVO queryConditionVO);

    /**
     * ${table.description}分页查询
     * @param queryConditionVO
     * @param page
     * @param size
     * @return
     */
    @ApiOperation(value = "${table.description}分页查询", notes = "${table.description}分页模糊查询")
    @ApiImplicitParams({
             @ApiImplicitParam(name = "page", value = "当前页码", required = true, dataType = "int", paramType = "query"),
             @ApiImplicitParam(name = "size", value = "分页尺寸", required = true, dataType = "int", paramType = "query")
    })
    @GetMapping("/page")
    ResponseResult<Pager<${table.className}VO>> getPageList(${table.className}QueryConditionVO queryConditionVO,
                                     @RequestParam(value = "page", defaultValue = "1") int page,
                                     @RequestParam(value = "size", defaultValue = "10") int size);
	
}
