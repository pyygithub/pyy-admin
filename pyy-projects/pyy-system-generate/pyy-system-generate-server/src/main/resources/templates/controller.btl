package ${table.controllerPackageName};

import ${table.modelPackageName}.${table.className};
import ${table.servicePackageName}.${table.className}Service;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;
import java.util.List;

/**
 * ---------------------------
 * ${table.description} (${table.className}Controller)         
 * ---------------------------
 * 作者：  ${table.author}
 * 时间：  ${strutil.formatDate(date(),'yyyy-MM-dd HH:mm:ss')}
 * 版本：  v1.0
 * ---------------------------
 */
@Api(tags = "${table.className}Controller", description = "${table.description}相关接口,提供增删改查功能")
@RestController
@RequestMapping(value = "/${table.objectName}", produces = MediaType.APPLICATION_JSON_UTF8_VALUE )
public class ${table.className}Controller implements ${table.className}ControllerApi{

	@Autowired
	private ${table.className}Service ${table.objectName}Service;

    @Override
    public ResponseResult<${table.className}VO> save(${table.className}SaveOrUpdateVO record) {
        return ResponseResult.SUCCESS(${table.objectName}Service.save(record));
    }

    @Override
    public ResponseResult<${table.className}VO> update(String id, ${table.className}SaveOrUpdateVO record) {
        return ResponseResult.SUCCESS(${table.objectName}Service.update(id, record));
    }

    @Override
    public ResponseResult delete(String id) {
        ${table.objectName}Service.delete(id);
        return ResponseResult.SUCCESS();
    }

    @Override
    public ResponseResult<${table.className}VO> findById(String id) {
        return ResponseResult.SUCCESS(${table.objectName}Service.findById(id));
    }

    @Override
    public ResponseResult<List<${table.className}VO>> getList(${table.className}QueryConditionVO queryConditionVO) {
        return ResponseResult.SUCCESS(${table.objectName}Service.findList(queryConditionVO));
    }

    @Override
    public ResponseResult<Pager<${table.className}VO>> getPageList(${table.className}QueryConditionVO queryConditionVO, int page, int size) {
        return ResponseResult.SUCCESS(${table.objectName}Service.findList(queryConditionVO, page, size));
    }
	
}
